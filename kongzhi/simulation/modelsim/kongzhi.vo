// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "09/17/2021 08:52:33"

// 
// Device: Altera EP4CE6F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module kongzhi (
	clk,
	key,
	led);
input 	clk;
input 	[3:0] key;
output 	[3:0] led;

// Design Ports Information
// led[0]	=>  Location: PIN_E10,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// led[1]	=>  Location: PIN_F9,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// led[2]	=>  Location: PIN_C9,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// led[3]	=>  Location: PIN_D9,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 8mA
// key[0]	=>  Location: PIN_N13,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// clk	=>  Location: PIN_E1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// key[1]	=>  Location: PIN_M15,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// key[2]	=>  Location: PIN_M16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// key[3]	=>  Location: PIN_E16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("kongzhi_v.sdo");
// synopsys translate_on

wire \led[0]~output_o ;
wire \led[1]~output_o ;
wire \led[2]~output_o ;
wire \led[3]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \key[0]~input_o ;
wire \led[0]~0_combout ;
wire \led[0]~reg0_q ;
wire \key[1]~input_o ;
wire \led[1]~1_combout ;
wire \led[1]~reg0_q ;
wire \key[2]~input_o ;
wire \led[2]~2_combout ;
wire \led[2]~reg0_q ;
wire \key[3]~input_o ;
wire \led[3]~3_combout ;
wire \led[3]~reg0_q ;


// Location: IOOBUF_X28_Y24_N23
cycloneive_io_obuf \led[0]~output (
	.i(\led[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[0]~output .bus_hold = "false";
defparam \led[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X23_Y24_N16
cycloneive_io_obuf \led[1]~output (
	.i(\led[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[1]~output .bus_hold = "false";
defparam \led[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X18_Y24_N9
cycloneive_io_obuf \led[2]~output (
	.i(\led[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[2]~output .bus_hold = "false";
defparam \led[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X18_Y24_N16
cycloneive_io_obuf \led[3]~output (
	.i(\led[3]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[3]~output .bus_hold = "false";
defparam \led[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X34_Y2_N22
cycloneive_io_ibuf \key[0]~input (
	.i(key[0]),
	.ibar(gnd),
	.o(\key[0]~input_o ));
// synopsys translate_off
defparam \key[0]~input .bus_hold = "false";
defparam \key[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X28_Y20_N0
cycloneive_lcell_comb \led[0]~0 (
// Equation(s):
// \led[0]~0_combout  = !\key[0]~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(\key[0]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\led[0]~0_combout ),
	.cout());
// synopsys translate_off
defparam \led[0]~0 .lut_mask = 16'h0F0F;
defparam \led[0]~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X28_Y20_N1
dffeas \led[0]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\led[0]~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\led[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \led[0]~reg0 .is_wysiwyg = "true";
defparam \led[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X34_Y12_N15
cycloneive_io_ibuf \key[1]~input (
	.i(key[1]),
	.ibar(gnd),
	.o(\key[1]~input_o ));
// synopsys translate_off
defparam \key[1]~input .bus_hold = "false";
defparam \key[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X29_Y20_N0
cycloneive_lcell_comb \led[1]~1 (
// Equation(s):
// \led[1]~1_combout  = !\key[1]~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(\key[1]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\led[1]~1_combout ),
	.cout());
// synopsys translate_off
defparam \led[1]~1 .lut_mask = 16'h0F0F;
defparam \led[1]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X29_Y20_N1
dffeas \led[1]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\led[1]~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\led[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \led[1]~reg0 .is_wysiwyg = "true";
defparam \led[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X34_Y12_N22
cycloneive_io_ibuf \key[2]~input (
	.i(key[2]),
	.ibar(gnd),
	.o(\key[2]~input_o ));
// synopsys translate_off
defparam \key[2]~input .bus_hold = "false";
defparam \key[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X23_Y20_N24
cycloneive_lcell_comb \led[2]~2 (
// Equation(s):
// \led[2]~2_combout  = !\key[2]~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\key[2]~input_o ),
	.cin(gnd),
	.combout(\led[2]~2_combout ),
	.cout());
// synopsys translate_off
defparam \led[2]~2 .lut_mask = 16'h00FF;
defparam \led[2]~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X23_Y20_N25
dffeas \led[2]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\led[2]~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\led[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \led[2]~reg0 .is_wysiwyg = "true";
defparam \led[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X34_Y12_N8
cycloneive_io_ibuf \key[3]~input (
	.i(key[3]),
	.ibar(gnd),
	.o(\key[3]~input_o ));
// synopsys translate_off
defparam \key[3]~input .bus_hold = "false";
defparam \key[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X22_Y20_N0
cycloneive_lcell_comb \led[3]~3 (
// Equation(s):
// \led[3]~3_combout  = !\key[3]~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\key[3]~input_o ),
	.cin(gnd),
	.combout(\led[3]~3_combout ),
	.cout());
// synopsys translate_off
defparam \led[3]~3 .lut_mask = 16'h00FF;
defparam \led[3]~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X22_Y20_N1
dffeas \led[3]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\led[3]~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\led[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \led[3]~reg0 .is_wysiwyg = "true";
defparam \led[3]~reg0 .power_up = "low";
// synopsys translate_on

assign led[0] = \led[0]~output_o ;

assign led[1] = \led[1]~output_o ;

assign led[2] = \led[2]~output_o ;

assign led[3] = \led[3]~output_o ;

endmodule
