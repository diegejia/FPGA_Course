// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "10/16/2021 17:55:54"

// 
// Device: Altera EP4CE6F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module fenpin (
	clk_out,
	clk_in,
	rst);
output 	clk_out;
input 	clk_in;
input 	rst;

// Design Ports Information
// clk_out	=>  Location: PIN_L1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk_in	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// rst	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("fenpin_8_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \clk_out~output_o ;
wire \clk_in~input_o ;
wire \clk_in~inputclkctrl_outclk ;
wire \cnt[3]~2_combout ;
wire \rst~input_o ;
wire \rst~inputclkctrl_outclk ;
wire \cnt~1_combout ;
wire \cnt[2]~3_combout ;
wire \cnt~0_combout ;
wire \Equal0~0_combout ;
wire \clk_out~0_combout ;
wire \clk_out~reg0_q ;
wire [3:0] cnt;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y8_N23
cycloneive_io_obuf \clk_out~output (
	.i(\clk_out~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\clk_out~output_o ),
	.obar());
// synopsys translate_off
defparam \clk_out~output .bus_hold = "false";
defparam \clk_out~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \clk_in~input (
	.i(clk_in),
	.ibar(gnd),
	.o(\clk_in~input_o ));
// synopsys translate_off
defparam \clk_in~input .bus_hold = "false";
defparam \clk_in~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk_in~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk_in~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk_in~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk_in~inputclkctrl .clock_type = "global clock";
defparam \clk_in~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N14
cycloneive_lcell_comb \cnt[3]~2 (
// Equation(s):
// \cnt[3]~2_combout  = cnt[3] $ (((cnt[1] & (cnt[2] & cnt[0]))))

	.dataa(cnt[1]),
	.datab(cnt[2]),
	.datac(cnt[3]),
	.datad(cnt[0]),
	.cin(gnd),
	.combout(\cnt[3]~2_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[3]~2 .lut_mask = 16'h78F0;
defparam \cnt[3]~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \rst~input (
	.i(rst),
	.ibar(gnd),
	.o(\rst~input_o ));
// synopsys translate_off
defparam \rst~input .bus_hold = "false";
defparam \rst~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \rst~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\rst~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\rst~inputclkctrl_outclk ));
// synopsys translate_off
defparam \rst~inputclkctrl .clock_type = "global clock";
defparam \rst~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y8_N15
dffeas \cnt[3] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\cnt[3]~2_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[3]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[3] .is_wysiwyg = "true";
defparam \cnt[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N24
cycloneive_lcell_comb \cnt~1 (
// Equation(s):
// \cnt~1_combout  = (!cnt[0] & ((cnt[2]) # ((cnt[3]) # (!cnt[1]))))

	.dataa(cnt[2]),
	.datab(cnt[3]),
	.datac(cnt[0]),
	.datad(cnt[1]),
	.cin(gnd),
	.combout(\cnt~1_combout ),
	.cout());
// synopsys translate_off
defparam \cnt~1 .lut_mask = 16'h0E0F;
defparam \cnt~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N25
dffeas \cnt[0] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\cnt~1_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[0]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[0] .is_wysiwyg = "true";
defparam \cnt[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N4
cycloneive_lcell_comb \cnt[2]~3 (
// Equation(s):
// \cnt[2]~3_combout  = cnt[2] $ (((cnt[0] & cnt[1])))

	.dataa(gnd),
	.datab(cnt[0]),
	.datac(cnt[2]),
	.datad(cnt[1]),
	.cin(gnd),
	.combout(\cnt[2]~3_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[2]~3 .lut_mask = 16'h3CF0;
defparam \cnt[2]~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N5
dffeas \cnt[2] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\cnt[2]~3_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[2]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[2] .is_wysiwyg = "true";
defparam \cnt[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N22
cycloneive_lcell_comb \cnt~0 (
// Equation(s):
// \cnt~0_combout  = (cnt[1] & (!cnt[0] & ((cnt[2]) # (cnt[3])))) # (!cnt[1] & (((cnt[0]))))

	.dataa(cnt[2]),
	.datab(cnt[3]),
	.datac(cnt[1]),
	.datad(cnt[0]),
	.cin(gnd),
	.combout(\cnt~0_combout ),
	.cout());
// synopsys translate_off
defparam \cnt~0 .lut_mask = 16'h0FE0;
defparam \cnt~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N23
dffeas \cnt[1] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\cnt~0_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[1]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[1] .is_wysiwyg = "true";
defparam \cnt[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N18
cycloneive_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (cnt[1] & (!cnt[3] & (!cnt[2] & !cnt[0])))

	.dataa(cnt[1]),
	.datab(cnt[3]),
	.datac(cnt[2]),
	.datad(cnt[0]),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h0002;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N16
cycloneive_lcell_comb \clk_out~0 (
// Equation(s):
// \clk_out~0_combout  = \clk_out~reg0_q  $ (\Equal0~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\clk_out~reg0_q ),
	.datad(\Equal0~0_combout ),
	.cin(gnd),
	.combout(\clk_out~0_combout ),
	.cout());
// synopsys translate_off
defparam \clk_out~0 .lut_mask = 16'h0FF0;
defparam \clk_out~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N17
dffeas \clk_out~reg0 (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_out~0_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_out~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \clk_out~reg0 .is_wysiwyg = "true";
defparam \clk_out~reg0 .power_up = "low";
// synopsys translate_on

assign clk_out = \clk_out~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_C1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_H1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_F16,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
